// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameUser = "users"

// User mapped from table <users>
type User struct {
	ID         int64          `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	Name       string         `gorm:"column:name;not null" json:"name"`
	Surname    string         `gorm:"column:surname;not null" json:"surname"`
	Patronymic string         `gorm:"column:patronymic" json:"patronymic"`
	Position   string         `gorm:"column:position" json:"position"`
	IsAdmin    bool           `gorm:"column:is_admin;not null" json:"is_admin"`
	IsActive   bool           `gorm:"column:is_active;not null;default:1" json:"is_active"`
	Email      string         `gorm:"column:email;not null" json:"email"`
	Password   string         `gorm:"column:password;not null" json:"password"`
	AvatarID   int64          `gorm:"column:avatar_id" json:"avatar_id"`
	DeletedAt  gorm.DeletedAt `gorm:"column:deleted_at" json:"deleted_at"`
	CreatedAt  time.Time      `gorm:"column:created_at" json:"created_at"`
	UpdatedAt  time.Time      `gorm:"column:updated_at" json:"updated_at"`
	Telegram   string         `gorm:"column:telegram;not null" json:"telegram"`
	GenderID   int32          `gorm:"column:gender_id;not null;default:1" json:"gender_id"`
	GradeID    int64          `gorm:"column:grade_id" json:"grade_id"`
	CanGrade   bool           `gorm:"column:can_grade;not null" json:"can_grade"`
	NotaEmail  string         `gorm:"column:nota_email" json:"nota_email"`
}

// TableName User's table name
func (*User) TableName() string {
	return TableNameUser
}

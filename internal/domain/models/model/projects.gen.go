// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameProject = "projects"

// Project mapped from table <projects>
type Project struct {
	ID                 int64          `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	Name               string         `gorm:"column:name;not null" json:"name"`
	Slug               string         `gorm:"column:slug;not null" json:"slug"`
	Workflow           string         `gorm:"column:workflow;not null" json:"workflow"`
	LogoID             int64          `gorm:"column:logo_id" json:"logo_id"`
	DeletedAt          gorm.DeletedAt `gorm:"column:deleted_at" json:"deleted_at"`
	CreatedAt          time.Time      `gorm:"column:created_at" json:"created_at"`
	UpdatedAt          time.Time      `gorm:"column:updated_at" json:"updated_at"`
	PermUserSelfAssign bool           `gorm:"column:perm_user_self_assign;not null" json:"perm_user_self_assign"`
	PermUserCreateTask bool           `gorm:"column:perm_user_create_task;not null" json:"perm_user_create_task"`
	PermManagerIsAdmin bool           `gorm:"column:perm_manager_is_admin;not null" json:"perm_manager_is_admin"`
	IsArchived         bool           `gorm:"column:is_archived;not null" json:"is_archived"`
	ProjectTypeID      int64          `gorm:"column:project_type_id" json:"project_type_id"`
	Begin              time.Time      `gorm:"column:begin" json:"begin"`
	End                time.Time      `gorm:"column:end" json:"end"`
	PermUserToRft      bool           `gorm:"column:perm_user_to_rft;not null" json:"perm_user_to_rft"`
	WikiLink           string         `gorm:"column:wiki_link" json:"wiki_link"`
	PermEpicRequired   bool           `gorm:"column:perm_epic_required;not null" json:"perm_epic_required"`
	PassboltFolderID   string         `gorm:"column:passbolt_folder_id" json:"passbolt_folder_id"`
	Users              []User         `gorm:"many2many:project_user" json:"users"`
}

// TableName Project's table name
func (*Project) TableName() string {
	return TableNameProject
}
